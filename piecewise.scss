@function populateArgs($list, $length) {
  $newList: (nth($list, 1));
  @if $length > 1 {
    @for $i from 2 through $length {
      @if length($list) >= $i {
        $newList: append($newList, nth($list, $i));
      } @else if $i == 4 and length($list) > 1 {
        $newList: append($newList, nth($list, 2));
      } @else {
        $newList: append($newList, nth($list, 1));
      }
    }
  }
  @return $newList;
}

@function pixelize($list) {
  $newList: ();
  @for $i from 1 through length($list) {
    @if type-of(nth($list, $i)) == number {
      $newList: append($newList, stripUnit(nth($list, $i)) * 1px);
    } @else {
      $newList: append($newList,  (nth($list, $i)));
    }
  }
  @return $newList;
}

@function stripUnit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

@function listUnitless($list) {
  @for $i from 1 through length($list) {
    @if unitless(nth($list, $i)) {
      @return true;
    }
  }
  @return false;
}

@function getCalcs($smallSize, $largeSize, $pxMin, $pxMax) {
  @if (length($smallSize) != length($largeSize)) {
    $max: max(length($smallSize), length($largeSize));
    $smallSize: populateArgs($smallSize, $max);
    $largeSize: populateArgs($largeSize, $max);
  }
  $calcsList: ();
  @for $i from 1 through length($smallSize) {
    @if nth($smallSize, $i) == nth($largeSize, $i) {
      $calcsList: append($calcsList, pixelize(nth($smallSize, $i)));
    } @else {
      $calcsList: append(
        $calcsList,
        calc(#{getCalc(nth($smallSize, $i), nth($largeSize, $i), $pxMin, $pxMax)})
      );
    }
  }
  @return $calcsList;
}

@function getCalc($smallSize, $largeSize, $pxMin:null, $pxMax:null) {
  @if $pxMax == null {
    @if $pxMin == null and global-variable-exists(globalMax) {
      $pxMax: stripUnit($globalMax);
    } @else if variable-exists(pxMin) {
      $pxMax: stripUnit($pxMin);
    } @else {
      @error 'Was expecting `$globalMax` to be defined.';
    }
  }
  @if $pxMin == null {
    @if global-variable-exists(globalMin) {
      $pxMin: stripUnit($globalMin);
    } @else {
      @error 'Was expecting `$globalMin` to be defined.';
    }
  }

  @if $smallSize != $largeSize {
    @if stripUnit($smallSize) != 0 {
      @return #{pixelize($smallSize)} + #{'('}100vw - #{pixelize($pxMin)}#{')'}/#{($pxMax - $pxMin)/(stripUnit($largeSize) - stripUnit($smallSize))};
    } @else {
      @return #{#{'(100vw'} - #{pixelize($pxMin)}#{')'}/#{($pxMax - $pxMin)/(stripUnit($largeSize) - stripUnit($smallSize))}};
    }
  } @else {
    @return pixelize($smallSize);
  }
}

@function isListNumbers($list) {
  @each $ele in $list {
    @if type-of($ele) != number {
      @return false;
    }
  }
  @return true;
}

@mixin piecewise($prop, $smallSize, $largeSize, $pxMin:null, $pxMax:null, $important:null, $imp2:null) {
  @if type-of($important) != number {
    @if $pxMax == null {
      @if $pxMin == null and global-variable-exists(globalMax) {
        $pxMax: stripUnit($globalMax);
      } @else if variable-exists(pxMin) {
        $pxMax: stripUnit($pxMin);
      } @else {
        @error 'Was expecting `$globalMax` to be defined.';
      }
    }
    @if $pxMin == null {
      @if global-variable-exists(globalMin) {
        $pxMin: stripUnit($globalMin);
      } @else {
        @error 'Was expecting `$globalMin` to be defined.';
      }
    }

    @media (max-width: pixelize($pxMin)) {
      #{$prop}: pixelize($smallSize) $important;
    }
    @if $pxMin != $pxMax and isListNumbers($smallSize) and isListNumbers($largeSize) {
      @media (min-width: pixelize($pxMin)) and (max-width: pixelize($pxMax)) {
        #{$prop}: getCalcs($smallSize, $largeSize, $pxMin, $pxMax) $important;
      }
    }
    @media (min-width: pixelize($pxMax)) {
      #{$prop}: pixelize($largeSize) $important;
    }
  } @else {
    @include doublePiecewise($prop, $smallSize, $largeSize, $pxMin, $pxMax, $important, $imp2);
  }
}

@mixin doublePiecewise($prop, $smallVal, $midVal, $largeVal, $pxMin, $pxMax, $important:null) {
  @media (max-width: pixelize($pxMin)) {
    #{$prop}: pixelize($smallVal) $important;
  }
  @if $pxMin != $pxMax {
    @media (min-width: pixelize($pxMin)) and (max-width: pixelize($pxMax)) {
      #{$prop}: pixelize($midVal);
    }
  }
  @media (min-width: pixelize($pxMax)) {
    #{$prop}: pixelize($largeVal) $important;
  }
}

@mixin inversePiecewise($prop, $smallSize, $largeSize, $pxMin:null, $pxMax:null, $i:null) {
  @if $pxMax == null {
    @if $pxMin == null and global-variable-exists(globalMax) {
      $pxMax: stripUnit($globalMax);
    } @else if variable-exists(pxMin) {
      $pxMax: stripUnit($pxMin);
    } @else {
      @error 'Was expecting `$globalMax` to be defined.';
    }
  }
  @if $pxMin == null {
    @if global-variable-exists(globalMin) {
      $pxMin: stripUnit($globalMin);
    } @else {
      @error 'Was expecting `$globalMin` to be defined.';
    }
  }

  @media (max-width: pixelize($pxMin)) {
    @if $pxMin != $pxMax or listUnitless($smallSize) {
      #{$prop}: calc(100% - #{pixelize($smallSize)}) $i;
    } @else {
      #{$prop}: calc(100% - $smallSize) $i;
    }
  }
  @if $pxMin != $pxMax {
    @media (min-width: pixelize($pxMin)) and (max-width: pixelize($pxMax)) {
      #{$prop}: calc(100% - #{'('}#{getCalc($smallSize, $largeSize, $pxMin, $pxMax)}#{')'})
        $i;
    }
  }
  @media (min-width: pixelize($pxMax)) {
    @if $pxMin != $pxMax or listUnitless($largeSize) {
      #{$prop}: calc(100% - #{pixelize($largeSize)}) $i;
    } @else {
      #{$prop}: calc(100% - $largeSize) $i;
    }
  }
}